[{"path":"/dev/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to rapbase","title":"Contributing to rapbase","text":"outlines propose change rapbase. detailed info contributing, please see tidyverse development contributing guide.","code":""},{"path":"/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to rapbase","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to rapbase","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to rapbase","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"rapporteket/rapbase\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to rapbase","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/dev/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/dev/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/dev/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/dev/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/dev/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/dev/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/dev/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/dev/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/dev/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/dev/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/dev/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/dev/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/dev/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/dev/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/dev/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/dev/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/dev/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/dev/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 SKDE  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. rapbase Copyright (C) 2019 SKDE This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/dev/articles/stagingData.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Staging data: principles and set-up","text":"Registry applications Rapporteket normally obtains data opening connections database containing raw registry data. figures, tables reports can made, data usually filtered, combined analyzed. Depending amount data complexity analysis process can time-consuming. Quite often, pre-processing can generalized run every time user interacts registry application. Staging data allow pre-processed data stored quick easy retrieval therefore reduce time registry applications need spend processing data. document aim describe staging data works enable Rapporteket.","code":""},{"path":"/dev/articles/stagingData.html","id":"backend","dir":"Articles","previous_headings":"","what":"Backend","title":"Staging data: principles and set-up","text":"Staging data may stored binary files blobs database. case, creating retrieving staging data follow scheme regardless stored. Selecting backend configurable apply globally, .e. registry applications Rapporteket.","code":""},{"path":"/dev/articles/stagingData.html","id":"file","dir":"Articles","previous_headings":"Backend","what":"File","title":"Staging data: principles and set-up","text":"store staging data binary files make sure set property target value file $R_RAP_CONFIG_PATH/rapbaseConfig.yml: staging data stored files property key use may take value. given registry MyRegistry staging data set MyData stored file path R_RAP_CONFIG_PATH/stagingData/MyRegistry/MyData.","code":"...   # Staging data   staging:     target: file     key: staging ..."},{"path":"/dev/articles/stagingData.html","id":"database","dir":"Articles","previous_headings":"Backend","what":"Database","title":"Staging data: principles and set-up","text":"store staging data blobs database make sure set property target value db $R_RAP_CONFIG_PATH/rapbaseConfig.yml: staging data stored database key must match corresponding entry $R_RAP_CONFIG_PATH/dbConfig.yml provides database connection credentials: database server must exist accept connections defined configuration. database exist registry application request staging data, created.","code":"...   # Staging data   staging:     target: db     key: stagingDb ... ... stagingDb:   host: database_server_hostname_or_ip   name: database_name   user: some_username   pass: password_for_some_username   disp: optional_information ..."},{"path":"/dev/articles/stagingData.html","id":"encryption","dir":"Articles","previous_headings":"","what":"Encryption","title":"Staging data: principles and set-up","text":"Prior storage R data structure become staging data serialized binary, encrypted compressed. reading data already staged process reversed. Encryption based AES256 algorithm key applied generated password database credentials defined $R_RAP_CONFIG_PATH/dbConfig.yml corresponding registry. Hence, registry specific encryption staged data meaning common place storage, staged data accessible across registries. Protection provided encryption solely rest accessibility $R_RAP_CONFIG_PATH/dbConfig.yml holds information needed decrypt staging data.","code":""},{"path":"/dev/articles/stagingData.html","id":"caveats","dir":"Articles","previous_headings":"","what":"Caveats","title":"Staging data: principles and set-up","text":"key used encryption lost staging data longer accessible. key restored staging data encrypted key also forever lost. Hence, purpose remove staging data, destroying key potent method ensure proper deletion, please note making staged data inaccessible may lead errors registry applications uses staged data. number reasons database credentials registries Rapporteket may also point altered unintentional effect making staged data inaccessible.","code":""},{"path":"/dev/articles/stagingData.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Staging data: principles and set-up","text":"developers registry applications Rapporteket wants implement staging data, please refer staging data function documentation: help(\"rapbase::stagingData\").","code":""},{"path":"/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edvardsen. Author, maintainer. Kevin Otto Thon. Author. Arnfinn Hykkerud Steindal. Author.","code":""},{"path":"/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Edvardsen , Thon K, Steindal (2025). rapbase: Base Functions Resources Rapporteket. R package version 2.0.0.9000, https://github.com/Rapporteket/rapbase.","code":"@Manual{,   title = {rapbase: Base Functions and Resources for Rapporteket},   author = {Are Edvardsen and Kevin Otto Thon and Arnfinn Hykkerud Steindal},   year = {2025},   note = {R package version 2.0.0.9000},   url = {https://github.com/Rapporteket/rapbase}, }"},{"path":"/dev/index.html","id":"rapbase-","dir":"","previous_headings":"","what":"Base Functions and Resources for Rapporteket","title":"Base Functions and Resources for Rapporteket","text":"rapbase R package holding common R functions Rapporteket reporting service Norwegian medical quality registries. registry Rapporteket content structured R packages found Rapporteket organization GitHub. packages likely depend rapbase package. Top-level information regarding Rapporteket provided dedicated site (Norwegian).","code":""},{"path":"/dev/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Base Functions and Resources for Rapporteket","text":"Install rapbase CRAN: latest release package can installed GitHub: install development version GitHub :","code":"install.packages(\"rapbase\") remotes::install_github(\"Rapporteket/rapbase@*release\") remotes::install(\"Rapporteket/rapbase\")"},{"path":"/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Base Functions and Resources for Rapporteket","text":"package installed functions can called within R, e.g.: complete updated view package documentation please consult rapbase-site. Looking others implemented rapbase various registries also excellent way learning use rapbase. rapRegTemplate package (Norwegian) provides Shiny application template used making registries boiler plate code aid start . Please feel free also contact maintainers authors directly.","code":"rapbase::halloRapporteket()"},{"path":"/dev/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Base Functions and Resources for Rapporteket","text":"Please provide comments (e.g. proposed enhancements, shortcomings, errors) issue tracker.","code":""},{"path":"/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Base Functions and Resources for Rapporteket","text":"want make changes project please follow Contributing guide. Proposed changes processed based manual code reviews. Code accepted merged main branch used full scale TESTING QA prior making release PRODUCTION deployment. kick-starting, development environment set-included may applied docker docker-compose hand. cloning rapbase development environment can startet terminal local work copy root directory : Navigate browser localhost port 8787, log RStudio IDE initiate project “clicking” file rapbase.Rproj inside rapbase directory. development suggested imports rapbase R package needed. make sure installed use R Console run installing finished set start change-build-test iterations 🚀","code":"docker-compose up devtools::install_dev_deps()"},{"path":"/dev/index.html","id":"ethics","dir":"","previous_headings":"","what":"Ethics","title":"Base Functions and Resources for Rapporteket","text":"Please note ‘rapbase’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/dev/reference/appLog.html","id":null,"dir":"Reference","previous_headings":"","what":"App log test dataset. — appLog","title":"App log test dataset. — appLog","text":"dataset containing test entries application log.","code":""},{"path":"/dev/reference/appLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"App log test dataset. — appLog","text":"","code":"appLog"},{"path":"/dev/reference/appLog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"App log test dataset. — appLog","text":"data frame 20 rows 7 variables: time character timestamp user user name name user full name group users group/registry role users role resh_id users organization message log message","code":""},{"path":"/dev/reference/appNavbarUserWidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"Provides widget-like information utility block applied registry apps Rapporteket. Contains user name, organization logout/exit hyperlinked text.","code":""},{"path":"/dev/reference/appNavbarUserWidget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"","code":"appNavbarUserWidget(   user = \"Undefined person\",   organization = \"Undefined organization\",   addUserInfo = FALSE,   selectOrganization = FALSE,   namespace = NULL )"},{"path":"/dev/reference/appNavbarUserWidget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"user String providing name user organization String providing organization user addUserInfo Logical defining whether user data pop-part widget (TRUE) (FALSE, default) selectOrganization Logical organization can selected. namespace Character string providing namespace use, . Defaults NULL case namespace applied.","code":""},{"path":"/dev/reference/appNavbarUserWidget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"Ready made html script","code":""},{"path":"/dev/reference/appNavbarUserWidget.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"Normally, user information provided session parameter hence provided server. \"rendering\" info must hence done within layout element client tabPanel. Selecting one fine... client, uiOutput textOutput fine \"rendering information provided server. Example use shiny (pseudo code):","code":"server <- function(input, output, session) {   ...   output$appUserName <- renderText(getUserName(session))   output$appUserOrg <- renderText(getUserReshId(session))   ... }  ui <- tagList(   navbarPage(     ...,     tabPanel(...,     appNavbarUserWidget(user = uiOutput(appUserName),     organization = textOutput(appUserOrg))     ),     ...   ) )"},{"path":"/dev/reference/appNavbarUserWidget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create widget for registry apps at Rapporteket — appNavbarUserWidget","text":"","code":"appNavbarUserWidget() #> <script>var header = $('.navbar> .container-fluid'); #> header.append('<div class=\"navbar-brand\" style=\"float:right;vertical-align:super;font-size:65%\">Undefined personUndefined organization<\/div>'); #> console.log(header)<\/script>"},{"path":"/dev/reference/appendLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a log record — appendLog","title":"Append a log record — appendLog","text":"Internal function adding record log.","code":""},{"path":"/dev/reference/appendLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a log record — appendLog","text":"","code":"appendLog(event, name)"},{"path":"/dev/reference/appendLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a log record — appendLog","text":"event data.frame one record holding fields whatever logged. name String defining name log, currently one \"appLog\" \"reportLog\".","code":""},{"path":"/dev/reference/appendLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a log record — appendLog","text":"Provides new record log. log exist new one created appending new record log target configured files. logging database set advance.","code":""},{"path":"/dev/reference/autoReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules and helper functions for registry auto reports — autoReport","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"shiny modules may used set auto reporting registries Rapporteket.","code":""},{"path":"/dev/reference/autoReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"","code":"autoReportUI(id)  autoReportOrgInput(id)  autoReportOrgServer(id, orgs)  autoReportFormatInput(id)  autoReportFormatServer(id)  autoReportInput(id)  autoReportServer(   id,   registryName,   type,   org = NULL,   paramNames = shiny::reactiveVal(c(\"\")),   paramValues = shiny::reactiveVal(c(\"\")),   reports = NULL,   orgs = NULL,   eligible = shiny::reactiveVal(TRUE),   freq = \"month\",   user )  autoReportServer2(...)  orgList2df(orgs)"},{"path":"/dev/reference/autoReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"id Character string providing shiny module id. orgs Named list organizations (names) ids (values). set NULL (default) ids found auto report data used table listing existing auto reports. registryName Character string registry name key. Must correspond registry R package name. type Character string defining type auto reports. Must one c(\"subscription\", \"dispatchment\", \"bulletin\") org Shiny reactive NULL (default) defining organization (id) data source used dispatchments bulletins (case set NULL) value used populate organization field auto report data (autoReport.yml) auto report types. hand, since subscriptions personal (per user) relevant organization id implicit user case value org disregarded. paramNames Shiny reactive value vector parameter names values set interactively application run time. element vector must match exactly paramValues. Default value shiny::reactiveVal(\"\"). paramValues Shiny reactive value vector parameter values set interactively, .e. per user input application. Default value set shiny::reactiveVal(\"\") case parameter values defined reports used . words, explicit use paramValues needed parameter values must changed application run time. , element vector must correspond exactly paramNames. reports List given structure provides meta data reports made available automated reports. See Details description. eligible Logical defining module allowed work full capacity. might useful access module products restricted. Default TRUE, .e. restrictions. freq Character string defining default frequency set auto report GUI. Must one c(\"day\", \"week\", \"month\", \"quarter\", \"year\"). Default value \"month\". user List shiny reactive values providing user metadata privileges corresponding return value navbarWidgetServer. ... Arguments passed autoReportServer function","code":""},{"path":"/dev/reference/autoReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"general, shiny objects. particular, autoreportOrgServer returns list names \"name\" \"value\" corresponding reactive values selected organization name id. may used parameter values auto report functions needs altered application run time. orgList2df returns data frame columns \"name\" \"id\".","code":""},{"path":"/dev/reference/autoReport.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"reports argument must list entry represents one report name used auto report user interface selecting reports, e.g. reports = list(MagicReport = ...) produce entry \"MagicReport\" GUI list reports select . value entry must another list following names values: synopsis character string describing report fun report function base name (without\"()\") paramNames character vector naming arguments fun paramValues vector values corresponding paramNames named values used run reports none-interactively given schedule must therefore represent existing exported functions registry R package. subscriptions reports list can used , specifically values provided paramValues can go unchanged. likely parameter values must set dynamically runtime case paramValues must reactive part application. See Examples function arguments may used reactives application.","code":""},{"path":"/dev/reference/autoReport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules and helper functions for registry auto reports — autoReport","text":"","code":"## make a list for report metadata reports <- list(   FirstReport = list(     synopsis = \"First example report\",     fun = \"fun1\",     paramNames = c(\"organization\", \"topic\", \"outputFormat\"),     paramValues = c(111111, \"work\", \"html\")   ),   SecondReport = list(     synopsis = \"Second example report\",     fun = \"fun2\",     paramNames = c(\"organization\", \"topic\", \"outputFormat\"),     paramValues = c(111111, \"leisure\", \"pdf\")   ) )  ## make a list of organization names and numbers orgs <- list(   OrgOne = 111111,   OrgTwo = 222222 )  ## client user interface function ui <- shiny::fluidPage(   shiny::sidebarLayout(     shiny::sidebarPanel(       autoReportFormatInput(\"test\"),       autoReportOrgInput(\"test\"),       autoReportInput(\"test\")     ),     shiny::mainPanel(       autoReportUI(\"test\")     )   ) )  ## server function server <- function(input, output, session) {   org <- autoReportOrgServer(\"test\", orgs)   format <- autoReportFormatServer(\"test\")    # set reactive parameters overriding those in the reports list   paramNames <- shiny::reactive(c(\"organization\", \"outputFormat\"))   paramValues <- shiny::reactive(c(org$value(), format()))    autoReportServer2(     id = \"test\", registryName = \"rapbase\", type = \"dispatchment\",     org = org$value, paramNames = paramNames, paramValues = paramValues,     reports = reports, orgs = orgs, eligible = TRUE, freq = \"month\", user   ) }  # run the shiny app in an interactive environment if (interactive()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/createAutoReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and add report to config — createAutoReport","title":"Create and add report to config — createAutoReport","text":"Adds entry system configuration reports run given intervals. generating configuration new entry function load current system configuration, adds new entry saves updated system configuration.","code":""},{"path":"/dev/reference/createAutoReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and add report to config — createAutoReport","text":"","code":"createAutoReport(   synopsis,   package,   type = \"subscription\",   fun,   paramNames,   paramValues,   owner,   ownerName = \"\",   email,   organization,   runDayOfYear,   startDate = as.character(Sys.Date()),   terminateDate = NULL,   interval = \"\",   intervalName = \"\",   dryRun = FALSE,   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/createAutoReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and add report to config — createAutoReport","text":"synopsis String description report used subject field email distributed reports package String package name also corresponding registry type Character string defining type auto report. Currently, one 'subscription' (default) 'dispatchment' fun String providing name function called generating report paramNames String vector element corresponds input parameter used function paramValues String vector corresponding values paramNames owner String providing owner report. Usually user name ownerName String providing full name owner. Defaults empty string maintain backwards compatibility email String email address recipient email containing report organization String identifying organization owner belongs runDayOfYear Integer vector day numbers year report run startDate Date-class date report run first time. Default value set Sys.Date() + 1 .e. tomorrow. terminateDate Date-class date report longer run. Default value set NULL case function provide expiry date adding 3 years current date PRODUCTION context 1 month interval String defining time interval defined seq.POSIXt. Default value empty string intervalName String providing human understandable representation interval. Default value empty string dryRun Logical defining global auto report config actually updated. set TRUE actual config () returned function. FALSE default target List autoreports file database","code":""},{"path":"/dev/reference/createAutoReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and add report to config — createAutoReport","text":"Nothing unless dryRun set TRUE case list config returned","code":""},{"path":[]},{"path":"/dev/reference/createLogDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a logging database — createLogDb","title":"Create a logging database — createLogDb","text":"Internal function crates database used logging. return error database already exists.","code":""},{"path":"/dev/reference/createLogDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a logging database — createLogDb","text":"","code":"createLogDb(dbKey)"},{"path":"/dev/reference/createLogDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a logging database — createLogDb","text":"dbKey Character string key corresponding entry database dbConfig.yml. Please also make sure r.raplog.key property rapbaseConfig.yml given exact value.","code":""},{"path":"/dev/reference/createLogDb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a logging database — createLogDb","text":"Invisibly TRUE","code":""},{"path":"/dev/reference/createLogDbTabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tables for log entries in a database — createLogDbTabs","title":"Create tables for log entries in a database — createLogDbTabs","text":"Internal function crates database tables used logging. return error table(s) already exists.","code":""},{"path":"/dev/reference/createLogDbTabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tables for log entries in a database — createLogDbTabs","text":"","code":"createLogDbTabs()"},{"path":"/dev/reference/createLogDbTabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create tables for log entries in a database — createLogDbTabs","text":"Invisibly TRUE","code":""},{"path":"/dev/reference/deleteAutoReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete existing report from config/db — deleteAutoReport","title":"Delete existing report from config/db — deleteAutoReport","text":"Delete existing report config/db","code":""},{"path":"/dev/reference/deleteAutoReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete existing report from config/db — deleteAutoReport","text":"","code":"deleteAutoReport(   autoReportId,   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/deleteAutoReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete existing report from config/db — deleteAutoReport","text":"autoReportId String providing auto report unique id target List autoreports file database","code":""},{"path":[]},{"path":"/dev/reference/dot-getFun.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide explicit reference to function for do.call — .getFun","title":"Provide explicit reference to function for do.call — .getFun","text":"Provide explicit reference function .call","code":""},{"path":"/dev/reference/dot-getFun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide explicit reference to function for do.call — .getFun","text":"","code":".getFun(x)"},{"path":"/dev/reference/dot-getFun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide explicit reference to function for do.call — .getFun","text":"x string explicit reference, .e. 'package::function'","code":""},{"path":"/dev/reference/dot-getFun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide explicit reference to function for do.call — .getFun","text":"value exported 'function' 'package'","code":""},{"path":"/dev/reference/dot-testAutoReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple test of automated report — .testAutoReport","title":"Simple test of automated report — .testAutoReport","text":"Simple test automated reporting definitions provided yaml config file","code":""},{"path":"/dev/reference/dot-testAutoReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple test of automated report — .testAutoReport","text":"","code":".testAutoReport(aNum = 1, aChar = \"a\", anExp = Sys.Date(), bulletin = 0)"},{"path":"/dev/reference/dot-testAutoReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple test of automated report — .testAutoReport","text":"aNum number aChar character anExp expression bulletin Integer defining report type bulletin (1) (0). Set 0 default","code":""},{"path":"/dev/reference/dot-testAutoReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple test of automated report — .testAutoReport","text":"simple message listing contents arguments","code":""},{"path":"/dev/reference/dot-testAutoReport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple test of automated report — .testAutoReport","text":"","code":".testAutoReport() #> [1] \"/tmp/Rtmpj1uAHp/file1cea4383a21e.txt\""},{"path":"/dev/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules providing GUI and server logic for Export — export","title":"Shiny modules providing GUI and server logic for Export — export","text":"Functions registries wants implement exporting registry databases, e.g. local development purposes. Also includes relevant helper functions","code":""},{"path":"/dev/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules providing GUI and server logic for Export — export","text":"","code":"exportUCInput(id)  exportUCServer(id, registryName, repoName = registryName, eligible = TRUE)  exportUCApp(registryName = \"rapbase\")  selectListPubkey(pubkey)  exportDb(registryName, compress = FALSE, session)"},{"path":"/dev/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules providing GUI and server logic for Export — export","text":"id Character string module ID registryName Character string registry name key repoName Character string defining github repository name registry. Default value registryName. eligible Logical defining module allowed work full capacity. might useful access module products restricted. Default TRUE, .e. restrictions. pubkey Character vector public keys compress Logical export data compressed (using gzip). FALSE default. session Shiny session object","code":""},{"path":"/dev/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules providing GUI and server logic for Export — export","text":"Shiny objects, mostly. Helper functions may return stuff .","code":""},{"path":"/dev/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules providing GUI and server logic for Export — export","text":"","code":"## client user interface function ui <- shiny::fluidPage(   shiny::sidebarLayout(     shiny::sidebarPanel(       exportUCInput(\"test\"),     ),     shiny::mainPanel(       NULL     )   ) )  ## server function server <- function(input, output, session) {   exportUCServer(\"test\", registryName = \"rapbase\") }  ## run the shiny app in an interactive environment if (interactive()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/exportGuide.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules providing the Export Guide — exportGuide","title":"Shiny modules providing the Export Guide — exportGuide","text":"Shiny modules providing Export Guide","code":""},{"path":"/dev/reference/exportGuide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules providing the Export Guide — exportGuide","text":"","code":"exportGuideUI(id)  exportGuideServer(id, registryName)  exportGuideApp()"},{"path":"/dev/reference/exportGuide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules providing the Export Guide — exportGuide","text":"id Character string module ID registryName Character string registry name key","code":""},{"path":"/dev/reference/exportGuide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules providing the Export Guide — exportGuide","text":"Functions ui server representing (module) app","code":""},{"path":"/dev/reference/exportGuide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules providing the Export Guide — exportGuide","text":"","code":"ui <- shiny::fluidPage(   exportGuideUI(\"exportGuide\") )  server <- function(input, output, session) {   exportGuideServer(\"exportGuide\", \"test\") }  if (interactive()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/filterAutoRep.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter auto report data — filterAutoRep","title":"Filter auto report data — filterAutoRep","text":"Generic function filter various entities auto report data","code":""},{"path":"/dev/reference/filterAutoRep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter auto report data — filterAutoRep","text":"","code":"filterAutoRep(   data,   by,   pass,   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/filterAutoRep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter auto report data — filterAutoRep","text":"data List (nested) specifying auto reports filtered. May obtained rapbase::getConfig(fileName = \"autoReport.yml\") Character string defining filtering entity must one c(\"package\", \"type\", \"owner\", \"organization\"). term 'package' represents registry name pass Character vector defining values filtering entity allow reports pass filter target List autoreports file database","code":""},{"path":"/dev/reference/filterAutoRep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter auto report data — filterAutoRep","text":"List auto reports matching filtering criteria","code":""},{"path":"/dev/reference/filterAutoRep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter auto report data — filterAutoRep","text":"","code":"ar <- list(ar1 = list(type = \"A\"), ar2 = list(type = \"B\")) filterAutoRep(ar, \"type\", \"B\") # ar2 #> $ar2 #> $ar2$type #> [1] \"B\" #>  #>"},{"path":"/dev/reference/findNextRunDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Find next run date for automated reports — findNextRunDate","title":"Find next run date for automated reports — findNextRunDate","text":"Find next date automated report supposed run. Likely, function relevant shiny apps date printed","code":""},{"path":"/dev/reference/findNextRunDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find next run date for automated reports — findNextRunDate","text":"","code":"findNextRunDate(   runDayOfYear,   baseDayNum = as.POSIXlt(Sys.Date())$yday + 1,   startDate = NULL,   terminateDate = NULL,   interval = NULL,   returnFormat = \"%A %e. %B %Y\",   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/findNextRunDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find next run date for automated reports — findNextRunDate","text":"runDayOfYear Numeric vector providing year-day numbers baseDayNum Numeric defining base year-day. Default today startDate Character string format \"YYYY-MM-DD\" defining date first run. set NULL (default) none future date (compared date represented baseDayNum current year) disregarded. terminateDate Date-class date report longer run. Default value set NULL case function provide expiry date adding 3 years current date PRODUCTION context 1 month interval String defining time interval defined seq.POSIXt. Default value empty string returnFormat String providing return format described strptime current locale. Defaults \"%%d. %B %Y\" provide something like 'Mandag 20. januar 2019' Norwegian locale target List autoreports file database","code":""},{"path":"/dev/reference/findNextRunDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find next run date for automated reports — findNextRunDate","text":"String date printing","code":""},{"path":"/dev/reference/findNextRunDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find next run date for automated reports — findNextRunDate","text":"","code":"# Will return Jan 30 in the current year and locale with default formatting findNextRunDate(c(10, 20, 30), 20) #> [1] \"Friday 30. January 2026\""},{"path":"/dev/reference/fireInTheHole.html","id":null,"dir":"Reference","previous_headings":"","what":"Kick off functions at Rapporteket — fireInTheHole","title":"Kick off functions at Rapporteket — fireInTheHole","text":"function normally executed cron daemon. started function nest schedule functions defined configuration file, e.g. \"rapbaseConfig.yml\".","code":""},{"path":"/dev/reference/fireInTheHole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kick off functions at Rapporteket — fireInTheHole","text":"","code":"fireInTheHole(flipPeriod = FALSE)"},{"path":"/dev/reference/fireInTheHole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kick off functions at Rapporteket — fireInTheHole","text":"flipPeriod Logical used testing. FALSE default","code":""},{"path":"/dev/reference/fireInTheHole.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kick off functions at Rapporteket — fireInTheHole","text":"crontab example running fireInTheHole() every night 01 hours, Monday Friday emails suppressed:","code":"0  1 * * 1-5 Rscript -e 'rapbase::fireInTheHole()' >/dev/null 2>&1"},{"path":"/dev/reference/fireInTheHole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kick off functions at Rapporteket — fireInTheHole","text":"","code":"# \\donttest{ # Depends on the env var R_RAP_CONFIG_PATH being properly set fireInTheHole() #> Auto report data were upgraded: auto reports with no type defined now set to 'subscription'. # }"},{"path":"/dev/reference/getConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Get configuration for package, if any — getConfig","title":"Get configuration for package, if any — getConfig","text":"Try obtain yaml-formatted configuration placed either given environment variable R_RAP_CONFIG_PATH provided package . none can found function exits error","code":""},{"path":"/dev/reference/getConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get configuration for package, if any — getConfig","text":"","code":"getConfig(fileName = \"dbConfig.yml\", packageName = \"rapbase\")"},{"path":"/dev/reference/getConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get configuration for package, if any — getConfig","text":"fileName String providing configuration file base name packageName String providing package name","code":""},{"path":"/dev/reference/getConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get configuration for package, if any — getConfig","text":"list (yaml) configuration","code":""},{"path":"/dev/reference/getConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get configuration for package, if any — getConfig","text":"","code":"getConfig() #> $nordummy #> $nordummy$host #> [1] \"dummy_db_hostname.no\" #>  #> $nordummy$name #> [1] \"dummy_db_name\" #>  #> $nordummy$user #> [1] \"dummy_db_username\" #>  #> $nordummy$pass #> [1] \"dummy_db_password\" #>  #> $nordummy$disp #> [1] \"dummy_display_name\" #>  #>  #> $rapbase #> $rapbase$host #> [1] \"127.0.0.1\" #>  #> $rapbase$name #> [1] \"rapbase\" #>  #> $rapbase$user #> [1] \"root\" #>  #> $rapbase$pass #> [1] \"root\" #>  #> $rapbase$disp #> [1] \"ForTestingOnly\" #>  #>  #> $raplog #> $raplog$host #> [1] \"db\" #>  #> $raplog$name #> [1] \"raplog\" #>  #> $raplog$user #> [1] \"root\" #>  #> $raplog$pass #> [1] \"root\" #>  #> $raplog$disp #> [1] \"ForLogDevOnly\" #>  #>  #> $autoreport #> $autoreport$host #> [1] \"db\" #>  #> $autoreport$name #> [1] \"autoreport\" #>  #> $autoreport$user #> [1] \"root\" #>  #> $autoreport$pass #> [1] \"root\" #>  #> $autoreport$disp #> [1] \"ForAutoReportDevOnly\" #>  #>  #> $staging #> $staging$host #> [1] \"db\" #>  #> $staging$name #> [1] \"staging\" #>  #> $staging$user #> [1] \"root\" #>  #> $staging$pass #> [1] \"root\" #>  #> $staging$disp #> [1] \"ForStagingDataDevOnly\" #>  #>  #> $dev #> $dev$host #> [1] \"db\" #>  #> $dev$name #> [1] \"rapbase\" #>  #> $dev$user #> [1] \"root\" #>  #> $dev$pass #> [1] \"root\" #>  #> $dev$disp #> [1] \"ForDevOnly\" #>  #>"},{"path":"/dev/reference/getDbConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Get database connection configuration — getDbConfig","title":"Get database connection configuration — getDbConfig","text":"Get database connection configuration","code":""},{"path":"/dev/reference/getDbConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get database connection configuration — getDbConfig","text":"","code":"getDbConfig(registryName = \"data\")"},{"path":"/dev/reference/getDbConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get database connection configuration — getDbConfig","text":"registryName String id used registry global configuration file information database connection provided","code":""},{"path":"/dev/reference/getDbConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get database connection configuration — getDbConfig","text":"list name, user, password host db connection.","code":""},{"path":"/dev/reference/getGithub.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect various data from the GitHub API — getGithub","title":"Collect various data from the GitHub API — getGithub","text":"Collect various data GitHub API","code":""},{"path":"/dev/reference/getGithub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect various data from the GitHub API — getGithub","text":"","code":"getGithub(what, value, .token = NULL)"},{"path":"/dev/reference/getGithub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect various data from the GitHub API — getGithub","text":"Character string defining api endpoint. Currently one c(\"contributors\", \"members\", \"keys\"). value Character string specifying collect given endpoint. \"contributors\" name repository, \"members\" value team slug \"keys\" github user name. .token Character string providing av valid token used api call requires authentication. Listing team members require token appropriate credentials.","code":""},{"path":"/dev/reference/getGithub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect various data from the GitHub API — getGithub","text":"Character vector results GitHub api request","code":""},{"path":"/dev/reference/getRapPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all installed Rapporteket packages — getRapPackages","title":"Get all installed Rapporteket packages — getRapPackages","text":"Get installed packages depends 'rapbase' reported","code":""},{"path":"/dev/reference/getRapPackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all installed Rapporteket packages — getRapPackages","text":"","code":"getRapPackages()"},{"path":"/dev/reference/getRapPackages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all installed Rapporteket packages — getRapPackages","text":"Character vector packages names","code":""},{"path":"/dev/reference/getRapPackages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all installed Rapporteket packages — getRapPackages","text":"","code":"## Relevant only in a Rapporteket-like context if (isRapContext()) {   getRapPackages() }"},{"path":"/dev/reference/getRegs.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide vector of registries (i.e. their R packages) in config — getRegs","title":"Provide vector of registries (i.e. their R packages) in config — getRegs","text":"Provide vector registries (.e. R packages) config","code":""},{"path":"/dev/reference/getRegs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide vector of registries (i.e. their R packages) in config — getRegs","text":"","code":"getRegs(config)"},{"path":"/dev/reference/getRegs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide vector of registries (i.e. their R packages) in config — getRegs","text":"config list configuration automated reports","code":""},{"path":"/dev/reference/getRegs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide vector of registries (i.e. their R packages) in config — getRegs","text":"character vector registry (package) names","code":""},{"path":"/dev/reference/getSessionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get session data — getSessionData","title":"Get session data — getSessionData","text":"Internal function providing session data relevant logging.","code":""},{"path":"/dev/reference/getSessionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get session data — getSessionData","text":"","code":"getSessionData(session, group = NULL)"},{"path":"/dev/reference/getSessionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get session data — getSessionData","text":"session shiny session object group Character string providing name app R package name. term \"group\" used relate environmental variable SHINYPROXY_USERGROUPS corresponds apps given user can access.","code":""},{"path":"/dev/reference/getSessionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get session data — getSessionData","text":"list relevant log fields","code":""},{"path":"/dev/reference/halloRapporteket.html","id":null,"dir":"Reference","previous_headings":"","what":"Plain testing tool — halloRapporteket","title":"Plain testing tool — halloRapporteket","text":"used testing purposes","code":""},{"path":"/dev/reference/halloRapporteket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plain testing tool — halloRapporteket","text":"","code":"halloRapporteket()"},{"path":"/dev/reference/halloRapporteket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plain testing tool — halloRapporteket","text":"message test message","code":""},{"path":"/dev/reference/howWeDealWithPersonalData.html","id":null,"dir":"Reference","previous_headings":"","what":"Render text in pop-up — howWeDealWithPersonalData","title":"Render text in pop-up — howWeDealWithPersonalData","text":"Render text Rapporteket deals personal data","code":""},{"path":"/dev/reference/howWeDealWithPersonalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render text in pop-up — howWeDealWithPersonalData","text":"","code":"howWeDealWithPersonalData(session, callerPkg = NULL)"},{"path":"/dev/reference/howWeDealWithPersonalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render text in pop-up — howWeDealWithPersonalData","text":"session shiny session object used personalize text callerPkg Character string naming package makes call function case version number caller package added returned (html) info text. Default NULL case version number caller added info text","code":""},{"path":"/dev/reference/howWeDealWithPersonalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render text in pop-up — howWeDealWithPersonalData","text":"fragment html info text","code":""},{"path":"/dev/reference/isPkgRapReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a package is part of Rapporteket — isPkgRapReg","title":"Test if a package is part of Rapporteket — isPkgRapReg","text":"Test installed package linked Rapporteket based dependency package 'rapbase'","code":""},{"path":"/dev/reference/isPkgRapReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a package is part of Rapporteket — isPkgRapReg","text":"","code":"isPkgRapReg(pkg)"},{"path":"/dev/reference/isPkgRapReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a package is part of Rapporteket — isPkgRapReg","text":"pkg String providing package name","code":""},{"path":"/dev/reference/isPkgRapReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a package is part of Rapporteket — isPkgRapReg","text":"Logical TRUE pkg depends 'rapbase', FALSE ","code":""},{"path":[]},{"path":"/dev/reference/isPkgRapReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test if a package is part of Rapporteket — isPkgRapReg","text":"","code":"# returns FALSE, rapbase has no explicit dependency to itself isPkgRapReg(\"rapbase\") #> [1] FALSE"},{"path":"/dev/reference/isRapContext.html","id":null,"dir":"Reference","previous_headings":"","what":"Rapporteket context — isRapContext","title":"Rapporteket context — isRapContext","text":"Call function return TRUE run system environment variable R_RAP_INSTANCE set either \"DEV\", \"TEST\", \"QA\" \"PRODUCTION\" FALSE otherwise","code":""},{"path":"/dev/reference/isRapContext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rapporteket context — isRapContext","text":"","code":"isRapContext()"},{"path":"/dev/reference/isRapContext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rapporteket context — isRapContext","text":"Logical system defined Rapporteket context","code":""},{"path":"/dev/reference/isRapContext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rapporteket context — isRapContext","text":"","code":"isRapContext() #> [1] FALSE"},{"path":"/dev/reference/loadRegData.html","id":null,"dir":"Reference","previous_headings":"","what":"Provider of data for registries at Rapporteket — loadRegData","title":"Provider of data for registries at Rapporteket — loadRegData","text":"Generic registries, provide reporting data obtained sql databases Underlying function rapbase::RapporteketDbConnection","code":""},{"path":"/dev/reference/loadRegData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provider of data for registries at Rapporteket — loadRegData","text":"","code":"loadRegData(registryName, query, dbType = \"mysql\")  describeRegistryDb(registryName, tabs = c())"},{"path":"/dev/reference/loadRegData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provider of data for registries at Rapporteket — loadRegData","text":"registryName String Name registry defined dbConfig.yml query String SQL query obtain data dbType String Type db query, currently \"mysql\" (default) \"mssql\" tabs Character vector optional definition tables describe. Defaults empty vector case tables used","code":""},{"path":"/dev/reference/loadRegData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provider of data for registries at Rapporteket — loadRegData","text":"data frame containing registry data list table names corresponding fields attributes","code":""},{"path":"/dev/reference/logShinyInputChanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around logger::log_shiny_input_changes — logShinyInputChanges","title":"Wrapper around logger::log_shiny_input_changes — logShinyInputChanges","text":"Wrapper around logger::log_shiny_input_changes","code":""},{"path":"/dev/reference/logShinyInputChanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around logger::log_shiny_input_changes — logShinyInputChanges","text":"","code":"logShinyInputChanges(...)"},{"path":"/dev/reference/logShinyInputChanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around logger::log_shiny_input_changes — logShinyInputChanges","text":"... Arguments passed logger::log_shiny_input_changes function","code":""},{"path":"/dev/reference/logger.html","id":null,"dir":"Reference","previous_headings":"","what":"Log user events in shiny applications at Rapporteket — logger","title":"Log user events in shiny applications at Rapporteket — logger","text":"used logging application level (.e. shiny session started) report level (.e. time report run). Logging single report events made reactive environments within shiny server function within (report) functions used reactive environments.","code":""},{"path":"/dev/reference/logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log user events in shiny applications at Rapporteket — logger","text":"","code":"appLogger(   session,   msg = \"No message provided\",   .topcall = sys.call(-1),   .topenv = parent.frame() )  repLogger(   session,   msg = \"No message provided\",   .topcall = sys.call(-1),   .topenv = parent.frame() )  autLogger(   user,   name,   registryName,   reshId,   type,   pkg,   fun,   param,   msg = \"No message provided\",   .topenv = parent.frame() )"},{"path":"/dev/reference/logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log user events in shiny applications at Rapporteket — logger","text":"session Shiny session object used getting user data. testing development purposes session can replaced list() case various config options might used provide something sensible. msg String providing user defined message added log record. Default value 'message provided'. .topcall Parent call () calling function. Used provide function call arguments. Default value sys.call(-1). .topenv Name parent environment calling function. Used provide package name (.e. register) function called . Default value parent.frame(). user String providing owner automated report. value correspond actual user name provided shiny session Rapporteket. used subscription reports run outside shiny session. name String providing full name report owner. used automated reports run outside shiny session. registryName String providing registry name. used automated reports run outside shiny session. reshId String providing organization id (subscription) report author. used automated reports run outside shiny session. type Character string defining type report. used automated reports run outside shiny session case value replace .topcall. pkg Character string naming package function logged. used automated reports run outside shiny session. fun Character string naming function logged. used automated reports run outside shiny session. param List named function parameter. used automated reports run outside shiny session.","code":""},{"path":"/dev/reference/logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log user events in shiny applications at Rapporteket — logger","text":"Returns nothing calls logging appender","code":""},{"path":"/dev/reference/logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log user events in shiny applications at Rapporteket — logger","text":"fields appended log, following order: time: date-time event logged     format(time, \"%Y-%m-%d %H:%M:%S\") user: username found shiny session object   provided function argument name: full name user found shiny session object group: users group membership provided shiny     session object. Normally, correspond registry user     belongs role: users role provided shiny session object.     value depend whatever delivered authorization provider,     OpenQReg registries 'LU' (local user) 'SC' (system     coordinator) typical values resh_id: organization id current user provided     shiny session object, , source logging auto reports,     organization ID data source used make report environment: environment logger function     called (provided repLogger()) call: function (arguments) logger     called (provided repLogger()) message: optional message defined argument function autLogger() function special case used automated reports. Since reports run outside reactive (shiny) context shiny session data available logger. Hence, logging data must provided arguments directly. rapbase version 1.12.0 logging automated reports already taken care . Hence, function applied per registry application.","code":""},{"path":"/dev/reference/logger.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Log user events in shiny applications at Rapporteket — logger","text":"Pseudo code appLogger() may implemented: Pseudo code repLogger() can implemented part function reactive (shiny) context. First, example shiny server function (reactive) function renderPlot() calling function provides histogram: , logging called within function makeHist():","code":"library(shiny) library(raplog)  server <- function(input, output, session) {   raplog::appLogger(session, msg = \"Smerteregisteret: starting shiny app\")   ... } library(shiny) library(raplog)  server <- function(input, output, session) {   ...   output$hist <- renderPlot({     makeHist(data, var = input$var, bins = input$bins, session = session)   })   ... } makeHist <- function(data, var, bins, ...) {    if (\"session\" %in% names(list(...))) {     raplog::repLogger(session = list(...)[[\"session\"]],                       msg = \"Providing histogram\")   }   ... }"},{"path":"/dev/reference/logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log user events in shiny applications at Rapporteket — logger","text":"","code":"# \\donttest{ # Depend on the environment variable R_RAP_CONFIG_PATH being set try(appLogger(list())) #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> Error in appendLog(event, name) :  #>   There is nowhere to append the logfiles. The environment variable R_RAP_CONFIG_PATH should be defined! # }  # \\donttest{ # Depend on the environment variable R_RAP_CONFIG_PATH being set try(repLogger(list())) #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> Error in appendLog(event, name) :  #>   There is nowhere to append the logfiles. The environment variable R_RAP_CONFIG_PATH should be defined! # }  # \\donttest{ # Depend on the environment variable R_RAP_CONFIG_PATH being set try(autLogger(user = \"ttester\", registryName = \"rapbase\", reshId = \"999999\")) #> Error in autLogger(user = \"ttester\", registryName = \"rapbase\", reshId = \"999999\") :  #>   argument \"name\" is missing, with no default # }"},{"path":"/dev/reference/loggerSetup.html","id":null,"dir":"Reference","previous_headings":"","what":"Settings for logging as json — loggerSetup","title":"Settings for logging as json — loggerSetup","text":"Every info, warning error logged json format.","code":""},{"path":"/dev/reference/loggerSetup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Settings for logging as json — loggerSetup","text":"","code":"loggerSetup(   usernameEnv = \"SHINYPROXY_USERNAME\",   appidEnv = \"SHINYPROXY_APPID\",   hooks = TRUE )"},{"path":"/dev/reference/loggerSetup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Settings for logging as json — loggerSetup","text":"usernameEnv Global variable containing user name appidEnv Global variable containing application name hooks Logical defining hooks automatic logging set","code":""},{"path":"/dev/reference/makeAutoReportTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Make table of automated reports — makeAutoReportTab","title":"Make table of automated reports — makeAutoReportTab","text":"Make table rendered shiny app providing automated reports given user registry obtained shiny session object provided environmental variables run inside app container.","code":""},{"path":"/dev/reference/makeAutoReportTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make table of automated reports — makeAutoReportTab","text":"","code":"makeAutoReportTab(   session,   namespace = character(),   user = rapbase::getUserName(session),   group = rapbase::getUserGroups(session),   orgId = rapbase::getUserReshId(session),   type = \"subscription\",   mapOrgId = NULL,   includeReportId = FALSE,   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/makeAutoReportTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make table of automated reports — makeAutoReportTab","text":"session shiny session object namespace String naming namespace. Defaults character() case namespace created. function used shiny modules namespace must provided. user Character string providing username. Introduced new argument running apps inside containers. Default value set rapbase::getUserName(session) allow backward compatibility. group Character string defining registry, normally corresponding R package name value stemming SHINYPROXY_GROUPS environment variable. Introduced new argument running apps inside containers. Default value set rapbase::getUserGroups(session) allow backward compatibility. orgId Character string integer defining organization (id) user. Default value set rapbase::getUserReshId(session) allow backward compatibility. type Character string defining type auto reports tabulate. Must one \"subscription\", \"dispatchment\" \"bulletin\". Default value set \"subscription\". mapOrgId Data frame containing two columns 'name' 'id' corresponding unique name id organizations. Default NULL case ids provided auto report data used. case mapOrgId NULL id match found id found auto report data also used includeReportId Logical unique report id added last column table. FALSE default. target autoreport-list file database","code":""},{"path":"/dev/reference/makeAutoReportTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make table of automated reports — makeAutoReportTab","text":"Matrix providing table rendered shiny app","code":""},{"path":"/dev/reference/makeAutoReportTab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make table of automated reports — makeAutoReportTab","text":"table record (line) represents uniquely defined automated report. line two shiny action buttons provided allow editing deleting entry. applications implementing table observing events action buttons may used allow users manage automated reports GUI. action buttons editing deleting provided static input ids edit_button del_button upon clicking button part ids change unique id report. Hence, GUI call editing report can caught shiny::observeEvent(\"edit_button\") within event report id obtained collecting string double underscore, e.g. strsplit(input$edit_button, \"__\")[[1]][2]. Optionally, report id may provided last column table allow development registry specific purposes. Regardless, column normally hidden GUI. Take look example shiny server function rapRegTemplate function may implemented.","code":""},{"path":"/dev/reference/makeLogRecord.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a log record — makeLogRecord","title":"Make a log record — makeLogRecord","text":"Internal function adding default values make formatted log record.","code":""},{"path":"/dev/reference/makeLogRecord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a log record — makeLogRecord","text":"","code":"makeLogRecord(content)"},{"path":"/dev/reference/makeLogRecord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a log record — makeLogRecord","text":"content named list values logged","code":""},{"path":"/dev/reference/makeLogRecord.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a log record — makeLogRecord","text":"formatted log entry","code":""},{"path":"/dev/reference/makeRunDayOfYearSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","title":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","text":"function provides even sequence day numbers spanning 365/366 days start date interval provided. Mainly used setting automated reports Rapporteket","code":""},{"path":"/dev/reference/makeRunDayOfYearSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","text":"","code":"makeRunDayOfYearSequence(startDay = Sys.Date(), interval)"},{"path":"/dev/reference/makeRunDayOfYearSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","text":"startDay Start date sequence. May provided string, e.g. \\\"2019-03-17\\\" class \\\"Date\\\". Defaults today interval String representing valid seq.POSIXt interval \"DSTday\", \"week\", \"month\", \"quarter\" \"year\")","code":""},{"path":"/dev/reference/makeRunDayOfYearSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","text":"Integer vector day numbers","code":""},{"path":"/dev/reference/makeRunDayOfYearSequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a sequence of day numbers from av given date and interval — makeRunDayOfYearSequence","text":"","code":"makeRunDayOfYearSequence(interval = \"month\") #>  [1]  56  84 115 145 176 206 237 268 298 329 359  25"},{"path":"/dev/reference/makeStandardTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Make standard table for rmarkdown reports — makeStandardTable","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"Function return tables used reports.","code":""},{"path":"/dev/reference/makeStandardTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"","code":"mst(   tab,   col_names = colnames(tab),   type = \"pdf\",   cap = \"\",   label = knitr::opts_current$get(\"label\"),   digs = 0,   align = NULL,   fs = 8,   lsd = FALSE )"},{"path":"/dev/reference/makeStandardTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"tab Data frame matrix representing table. col_names Character vector column names. Defaults colnames(tab). type Character string defining output, either \"html\" \"pdf\". Default \"pdf\". cap Character string table caption. Empty string default. label Character string defining label case table needs referenced elsewhere overall document. instance, setting 'my_table' corresponding inline rmarkdown reference use \\@ref(tab:my_table). Please note work LaTex HTML bookdown document processing functions must used, .e. bookdown::pdf_document2() bookdown::html_document2(), respectively. Default value knitr::opts_current$get(\"label\") case name current R chunk used label. digs Integer number digits use. 0 default. align Character vector specifying column alignment LaTeX way, e.g. c(\"l\", \"c\", \"r\") align first column left, center second right-align last one. Default NULL case numeric columns right-aligned columns left-aligned. fs Integer providing font size. Applies pdf output. Default value 8. lsd Logical table scaled . Applies pdf output. FALSE default.","code":""},{"path":"/dev/reference/makeStandardTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"Character string containing RMarkdown table code","code":""},{"path":"/dev/reference/makeStandardTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"mst() creates RMarkdown code creating standard tables.","code":""},{"path":"/dev/reference/makeStandardTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make standard table for rmarkdown reports — makeStandardTable","text":"","code":"mst(tab = mtcars[1:10, ]) #> \\begin{table}[H] #> \\centering #> \\caption{} #> \\centering #> \\fontsize{8}{10}\\selectfont #> \\begin{tabular}[t]{lrrrrrrrrrrr} #> \\toprule #>   & mpg & cyl & disp & hp & drat & wt & qsec & vs & am & gear & carb\\\\ #> \\midrule #> Mazda RX4 & 21 & 6 & 160 & 110 & 4 & 3 & 16 & 0 & 1 & 4 & 4\\\\ #> Mazda RX4 Wag & 21 & 6 & 160 & 110 & 4 & 3 & 17 & 0 & 1 & 4 & 4\\\\ #> Datsun 710 & 23 & 4 & 108 & 93 & 4 & 2 & 19 & 1 & 1 & 4 & 1\\\\ #> Hornet 4 Drive & 21 & 6 & 258 & 110 & 3 & 3 & 19 & 1 & 0 & 3 & 1\\\\ #> Hornet Sportabout & 19 & 8 & 360 & 175 & 3 & 3 & 17 & 0 & 0 & 3 & 2\\\\ #> \\addlinespace #> Valiant & 18 & 6 & 225 & 105 & 3 & 3 & 20 & 1 & 0 & 3 & 1\\\\ #> Duster 360 & 14 & 8 & 360 & 245 & 3 & 4 & 16 & 0 & 0 & 3 & 4\\\\ #> Merc 240D & 24 & 4 & 147 & 62 & 4 & 3 & 20 & 1 & 0 & 4 & 2\\\\ #> Merc 230 & 23 & 4 & 141 & 95 & 4 & 3 & 23 & 1 & 0 & 4 & 2\\\\ #> Merc 280 & 19 & 6 & 168 & 123 & 4 & 3 & 18 & 1 & 0 & 4 & 4\\\\ #> \\bottomrule #> \\end{tabular} #> \\end{table}"},{"path":"/dev/reference/navbarWidget.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"Shiny modules making user information widget registry shiny apps Rapporteket. One benefit using modules reduced complexity number code lines registry.","code":""},{"path":"/dev/reference/navbarWidget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"","code":"navbarWidgetInput(id, addUserInfo = TRUE, selectOrganization = FALSE)  navbarWidgetServer(id, orgName, caller = environmentName(rlang::caller_env()))  navbarWidgetServer2(   id,   orgName,   map_orgname = NULL,   caller = environmentName(topenv(parent.frame())) )  navbarWidgetApp(orgName = \"Org Name\")"},{"path":"/dev/reference/navbarWidget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"id Character string providing module namespace addUserInfo Logical defining \"\" hyperlink added selectOrganization Logical providing option selecting among available organizations roles. orgName Character string naming organization caller Character string naming environment function called . Default value environmentName(topenv(parent.frame())). value used display current version R package representing registry Rapporteket. module called exported functions registry R package default value applied. module called outside registry environment caller must set actual name R package. map_orgname data.frame containing two columns: UnitId unit ids orgname corresponding organization names","code":""},{"path":"/dev/reference/navbarWidget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"Shiny objects, mostly. navbarWidgetServer2() invisibly returns   list reactive values representing user metadata privileges. See   userAttribute details values.","code":""},{"path":"/dev/reference/navbarWidget.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"modules take use shiny session object obtain data widget. Hence, Rapporteket like context needed modules function properly. deployment (shiny) application containers make sure migrate navbarWidgetServer2(). addition serving user information widget, function provides list reactive user attributes. Hence, using navbarWidgetServer2() source (static) user attributes longer shiny session object rather list object (reactive user attributes) returned function.","code":""},{"path":"/dev/reference/navbarWidget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules providing GUI and server logic for user info widget — navbarWidget","text":"","code":"## client user interface function ui <- shiny::tagList(   shiny::navbarPage(     \"Testpage\",     shiny::tabPanel(       \"Testpanel\",       shiny::mainPanel(         navbarWidgetInput(\"testWidget\")       )     )   ) )  ## server function server <- function(input, output, session) {   navbarWidgetServer(\"testWidget\", orgName = \"Test org\", caller = \"Rpkg\") }  ## run the app in an interactive session and a Rapporteket like environment if (interactive() && isRapContext()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/noOptOutOk.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a no-opt-out ok message — noOptOutOk","title":"Provide a no-opt-out ok message — noOptOutOk","text":"applied user input actually choice :-)","code":""},{"path":"/dev/reference/noOptOutOk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a no-opt-out ok message — noOptOutOk","text":"","code":"noOptOutOk()"},{"path":"/dev/reference/noOptOutOk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a no-opt-out ok message — noOptOutOk","text":"String possible state mind (Norwegian) left options","code":""},{"path":"/dev/reference/noOptOutOk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a no-opt-out ok message — noOptOutOk","text":"","code":"noOptOutOk() #> [1] \"Fint\""},{"path":"/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/dev/reference/pronoun.html","id":null,"dir":"Reference","previous_headings":"","what":"Data pronouns — .data","title":"Data pronouns — .data","text":"Data pronouns","code":""},{"path":"/dev/reference/pronoun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data pronouns — .data","text":"","code":".data"},{"path":"/dev/reference/rapCloseDbConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Close down data connection handle — rapCloseDbConnection","title":"Close down data connection handle — rapCloseDbConnection","text":"Close data connection handle","code":""},{"path":"/dev/reference/rapCloseDbConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close down data connection handle — rapCloseDbConnection","text":"","code":"rapCloseDbConnection(con)"},{"path":"/dev/reference/rapCloseDbConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close down data connection handle — rapCloseDbConnection","text":"con Open connection object closed","code":""},{"path":"/dev/reference/rapOpenDbConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide connection handle for data source at Rapporteket — rapOpenDbConnection","title":"Provide connection handle for data source at Rapporteket — rapOpenDbConnection","text":"Generic registries, handle data source connections, including usernames passwords needed open connections","code":""},{"path":"/dev/reference/rapOpenDbConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide connection handle for data source at Rapporteket — rapOpenDbConnection","text":"","code":"rapOpenDbConnection(registryName, dbType = \"mysql\")"},{"path":"/dev/reference/rapOpenDbConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide connection handle for data source at Rapporteket — rapOpenDbConnection","text":"registryName String id used registry global configuration file information database connection provided dbType String providing type data source, one \"mysql\" \"mssql\". Defaults \"mysql\"","code":""},{"path":"/dev/reference/rapOpenDbConnection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide connection handle for data source at Rapporteket — rapOpenDbConnection","text":"named list con drv representing db connection handle   driver, respectively.","code":""},{"path":"/dev/reference/rapbase.html","id":null,"dir":"Reference","previous_headings":"","what":"rapbase: Base Functions and Resources for Rapporteket — rapbase","title":"rapbase: Base Functions and Resources for Rapporteket — rapbase","text":"Provide common functions resources registry specific R-packages Rapporteket. packages relevant developers packages/registries Rapporteket","code":""},{"path":"/dev/reference/readAutoReportData.html","id":null,"dir":"Reference","previous_headings":"","what":"Read automated report metadata — readAutoReportData","title":"Read automated report metadata — readAutoReportData","text":"Read automated report metadata","code":""},{"path":"/dev/reference/readAutoReportData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read automated report metadata — readAutoReportData","text":"","code":"readAutoReportData(   fileName = \"autoReport.yml\",   packageName = \"rapbase\",   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/readAutoReportData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read automated report metadata — readAutoReportData","text":"fileName String defining name yaml configuration file. Default 'autoReport.yml' packageName String defining package configuration file resides. configuration file within R-package used case environmental variable 'R_RAP_CONFIG_PATH' defined (empty) target List autoreports file database","code":""},{"path":"/dev/reference/readAutoReportData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read automated report metadata — readAutoReportData","text":"list yaml data","code":""},{"path":"/dev/reference/readAutoReportData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read automated report metadata — readAutoReportData","text":"","code":"readAutoReportData() #> Auto report data were upgraded: auto reports with no type defined now set to 'subscription'. #> $testAutoReportFirst #> $testAutoReportFirst$synopsis #> [1] \"Test, the first one\" #>  #> $testAutoReportFirst$package #> [1] \"rapbase\" #>  #> $testAutoReportFirst$type #> [1] \"dispatchment\" #>  #> $testAutoReportFirst$fun #> [1] \".testAutoReport\" #>  #> $testAutoReportFirst$params #> $testAutoReportFirst$params$aNum #> [1] 1 #>  #> $testAutoReportFirst$params$aChar #> [1] \"a\" #>  #> $testAutoReportFirst$params$anExp #> [1] \"Sys.Date()\" #>  #>  #> $testAutoReportFirst$owner #> [1] \"ttester\" #>  #> $testAutoReportFirst$ownerName #> [1] \"Tore Tester\" #>  #> $testAutoReportFirst$email #> [1] \"Some One <someone@nowhere.com>\" \"Jesus <jesus@sky.com>\"          #>  #> $testAutoReportFirst$organization #> [1] \"999999\" #>  #> $testAutoReportFirst$startDate #> [1] \"1900-01-01\" #>  #> $testAutoReportFirst$terminateDate #> [1] \"2099-12-31\" #>  #> $testAutoReportFirst$interval #> [1] \"months\" #>  #> $testAutoReportFirst$intervalName #> NULL #>  #> $testAutoReportFirst$runDayOfYear #> [1] 30 60 #>  #>  #> $testAutoReportSecond #> $testAutoReportSecond$synopsis #> [1] \"Test, the second one\" #>  #> $testAutoReportSecond$package #> [1] \"rapbase\" #>  #> $testAutoReportSecond$type #> [1] \"subscription\" #>  #> $testAutoReportSecond$fun #> [1] \".testAutoReport\" #>  #> $testAutoReportSecond$params #> $testAutoReportSecond$params$aNum #> [1] 2 #>  #> $testAutoReportSecond$params$aChar #> [1] \"3.14\" #>  #> $testAutoReportSecond$params$anExp #> [1] \"sessionInfo()\" #>  #>  #> $testAutoReportSecond$owner #> [1] \"ttester\" #>  #> $testAutoReportSecond$ownerName #> [1] \"Tore Tester\" #>  #> $testAutoReportSecond$email #> [1] \"<someone@nowhere.com>\" #>  #> $testAutoReportSecond$organization #> [1] \"999999\" #>  #> $testAutoReportSecond$startDate #> [1] \"1900-01-01\" #>  #> $testAutoReportSecond$terminateDate #> [1] \"2099-12-31\" #>  #> $testAutoReportSecond$interval #> [1] \"weeks\" #>  #> $testAutoReportSecond$intervalName #> NULL #>  #> $testAutoReportSecond$runDayOfYear #> [1] 30 60 90 #>  #>  #> $testAutoReportThird #> $testAutoReportThird$synopsis #> [1] \"Test, the second one\" #>  #> $testAutoReportThird$type #> [1] \"bulletin\" #>  #> $testAutoReportThird$package #> [1] \"rapbase\" #>  #> $testAutoReportThird$fun #> [1] \".testAutoReport\" #>  #> $testAutoReportThird$params #> $testAutoReportThird$params$aNum #> [1] 2 #>  #> $testAutoReportThird$params$aChar #> [1] \"3.14\" #>  #> $testAutoReportThird$params$anExp #> [1] \"sessionInfo()\" #>  #> $testAutoReportThird$params$bulletin #> [1] TRUE #>  #>  #> $testAutoReportThird$owner #> [1] \"ttester\" #>  #> $testAutoReportThird$ownerName #> [1] \"Tore Tester\" #>  #> $testAutoReportThird$email #> [1] \"<someone@nowhere.com>\" \"jesus@sky.com\"         #>  #> $testAutoReportThird$organization #> [1] \"999999\" #>  #> $testAutoReportThird$startDate #> [1] \"1900-01-01\" #>  #> $testAutoReportThird$terminateDate #> [1] \"2099-12-31\" #>  #> $testAutoReportThird$interval #> [1] \"months\" #>  #> $testAutoReportThird$intervalName #> NULL #>  #> $testAutoReportThird$runDayOfYear #> [1] 30 60 90 #>  #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2` #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$synopsis #> [1] \"Test of auto report\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$package #> [1] \"rapbase\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$fun #> [1] \".testAutoReport\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$params #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$params$aNum #> [1] \"1\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$params$aChar #> [1] \"someString\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$params$anExp #> [1] \"Sys.Date()\" #>  #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$owner #> [1] \"ttester\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$ownerName #> [1] \"Tore Tester\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$email #> [1] \"tester@skde.no\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$organization #> [1] \"999999\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$startDate #> [1] \"1900-01-01\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$terminateDate #> [1] \"2099-12-31\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$interval #> [1] \"years\" #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$intervalName #> NULL #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$runDayOfYear #> [1] 170 #>  #> $`5a0e7e28fd4c641be535a2b292a6b7b2`$type #> [1] \"subscription\" #>  #>  #> $cd467ac14dd848b8798a384a3e51512c #> $cd467ac14dd848b8798a384a3e51512c$synopsis #> [1] \"Test of expired auto report\" #>  #> $cd467ac14dd848b8798a384a3e51512c$package #> [1] \"rapbase\" #>  #> $cd467ac14dd848b8798a384a3e51512c$fun #> [1] \".testAutoReport\" #>  #> $cd467ac14dd848b8798a384a3e51512c$params #> $cd467ac14dd848b8798a384a3e51512c$params$aNum #> [1] \"1\" #>  #> $cd467ac14dd848b8798a384a3e51512c$params$aChar #> [1] \"someString\" #>  #> $cd467ac14dd848b8798a384a3e51512c$params$anExp #> [1] \"Sys.Date()\" #>  #>  #> $cd467ac14dd848b8798a384a3e51512c$owner #> [1] \"ttester\" #>  #> $cd467ac14dd848b8798a384a3e51512c$ownerName #> [1] \"Tore Tester\" #>  #> $cd467ac14dd848b8798a384a3e51512c$email #> [1] \"tester@skde.no\" #>  #> $cd467ac14dd848b8798a384a3e51512c$organization #> [1] \"999999\" #>  #> $cd467ac14dd848b8798a384a3e51512c$startDate #> [1] \"1900-01-01\" #>  #> $cd467ac14dd848b8798a384a3e51512c$terminateDate #> [1] \"0000-01-01\" #>  #> $cd467ac14dd848b8798a384a3e51512c$interval #> [1] \"years\" #>  #> $cd467ac14dd848b8798a384a3e51512c$intervalName #> NULL #>  #> $cd467ac14dd848b8798a384a3e51512c$runDayOfYear #> [1] 171 #>  #> $cd467ac14dd848b8798a384a3e51512c$type #> [1] \"subscription\" #>  #>"},{"path":"/dev/reference/readLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Read log entries — readLog","title":"Read log entries — readLog","text":"Internal function provide log entries","code":""},{"path":"/dev/reference/readLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read log entries — readLog","text":"","code":"readLog(type, name = \"\", app_id = NULL)"},{"path":"/dev/reference/readLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read log entries — readLog","text":"type Character string defining log request data . Must one c(\"app\", \"report\"). name Character string registry filter. Default value empty string return log entries. empty value must correspond existing registry (.e. R package) name. app_id identifier particular registry. Default value NULL, case action taken. value provided, log filtered show entries matching chosen app_id.","code":""},{"path":"/dev/reference/readLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read log entries — readLog","text":"data frame log entries","code":""},{"path":"/dev/reference/renderRmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Render documents from rmarkdown files at Rapporteket — renderRmd","title":"Render documents from rmarkdown files at Rapporteket — renderRmd","text":"Function renders documents Rapporteket rmarkdown source files. Output formats may (vanilla) HTML PDF based pandoc latex template fragments html result embedded existing web pages. Rmarkdown allow parameters part report processing. Thus, parameters specific reports must provided (named list) calling renderRmd().","code":""},{"path":"/dev/reference/renderRmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render documents from rmarkdown files at Rapporteket — renderRmd","text":"","code":"renderRmd(   sourceFile,   outputType = \"html\",   logoFile = NULL,   params = list(),   template = \"default\" )"},{"path":"/dev/reference/renderRmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render documents from rmarkdown files at Rapporteket — renderRmd","text":"sourceFile Character string providing path rmarkdown source file. outputType Character string specifying output format. Must one c(\"pdf\", \"html\", \"html_fragment\"). Default value \"html\". logoFile Character string path logo used PDF output. Often, registry logo. PNG PDF graphics allowed. Default value NULL case logo added output document. params List report parameters (named values) override corresponding entries params rmarkdown document yaml header. Default NULL case parameters defined rmarkdown document overridden. template Character string defining template use making pdf documents. Must one \"default\" \"document\" first assumed argument set.","code":""},{"path":"/dev/reference/renderRmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render documents from rmarkdown files at Rapporteket — renderRmd","text":"Character string path rendered file , outputType set \"html_fragment\", character string providing html fragment. Files named according tempfile() empty pattern extension according outputType (\"pdf\" \"html\").","code":""},{"path":"/dev/reference/runAutoReport.html","id":null,"dir":"Reference","previous_headings":"","what":"Run reports as defined in yaml config and ship content by email — runAutoReport","title":"Run reports as defined in yaml config and ship content by email — runAutoReport","text":"Usually called scheduler, e.g. cron. provided day year matches config report run otherwise specified config. Functions called upon expected return character string providing path file can attached email , case bulletin, email body . bulletins, files attached. email prepared sent recipients defined config","code":""},{"path":"/dev/reference/runAutoReport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run reports as defined in yaml config and ship content by email — runAutoReport","text":"","code":"runAutoReport(   dayNumber = as.POSIXlt(Sys.Date())$yday + 1,   dato = Sys.Date(),   group = NULL,   type = c(\"subscription\", \"dispatchment\"),   target = rapbase::getConfig(\"rapbaseConfig.yml\")$r$autoReport$target,   dryRun = FALSE )"},{"path":"/dev/reference/runAutoReport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run reports as defined in yaml config and ship content by email — runAutoReport","text":"dayNumber Integer day year January 1st 1. Defaults current day, .e. .POSIXlt(Sys.Date())$yday + 1 (POSIXlt yday base 0) dato Date-class date report run first time. Default value set Sys.Date() group Character string defining registry, normally corresponding R package name value stemming SHINYPROXY_GROUPS environment variable. Introduced new argument running apps inside containers. Default value set rapbase::getUserGroups(session) allow backward compatibility. type Character vector defining type reports processed. May contain one c(\"subscription\", \"dispatchment\", \"bulletin\"). Defaults value set c(\"subscription\", \"dispatchment\"). target List autoreports file database dryRun Logical defining emails sent. TRUE message reference payload file given emails actually sent. Default FALSE","code":""},{"path":"/dev/reference/runAutoReport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run reports as defined in yaml config and ship content by email — runAutoReport","text":"Emails corresponding file attachment. dryRun == TRUE just message","code":""},{"path":"/dev/reference/runAutoReport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run reports as defined in yaml config and ship content by email — runAutoReport","text":"","code":"# \\donttest{ # Example depend on environment variable R_RAP_CONFIG_PATH being set runAutoReport() #> Auto report data were upgraded: auto reports with no type defined now set to 'subscription'. # }"},{"path":"/dev/reference/runBulletin.html","id":null,"dir":"Reference","previous_headings":"","what":"Run bulletin auto reports — runBulletin","title":"Run bulletin auto reports — runBulletin","text":"wrapper runAutoReport() issue bulletins. Purpose ease simplify fire---hole Rapporteket","code":""},{"path":"/dev/reference/runBulletin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run bulletin auto reports — runBulletin","text":"","code":"runBulletin()"},{"path":"/dev/reference/runBulletin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run bulletin auto reports — runBulletin","text":"Whatever runAutoReport() might provide","code":""},{"path":"/dev/reference/runNoweb.html","id":null,"dir":"Reference","previous_headings":"","what":"runNoweb — runNoweb","title":"runNoweb — runNoweb","text":"Function run noweb file contained package. Assume noweb files package placed flat inst directory","code":""},{"path":"/dev/reference/runNoweb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runNoweb — runNoweb","text":"","code":"runNoweb(nowebFileName, packageName, weaveMethod = \"knitr\")"},{"path":"/dev/reference/runNoweb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runNoweb — runNoweb","text":"nowebFileName Basename noweb file, e.g. 'myFile.Rnw'. packageName Name package containing noweb file(s) weaveMethod Method apply weaving. Currently available 'Sweave' 'knitr', default latter.","code":""},{"path":"/dev/reference/sanitizeLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitize log entries that have reached end of life — sanitizeLog","title":"Sanitize log entries that have reached end of life — sanitizeLog","text":"Sanitize log entries reached end life","code":""},{"path":"/dev/reference/sanitizeLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitize log entries that have reached end of life — sanitizeLog","text":"","code":"sanitizeLog()"},{"path":"/dev/reference/sanitizeLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitize log entries that have reached end of life — sanitizeLog","text":"NULL success","code":""},{"path":"/dev/reference/sendEmail.html","id":null,"dir":"Reference","previous_headings":"","what":"Send email from Rapporteket — sendEmail","title":"Send email from Rapporteket — sendEmail","text":"function can used send email within R Rapporteket. relies (must hence provided) specific settings local configuration work properly.","code":""},{"path":"/dev/reference/sendEmail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send email from Rapporteket — sendEmail","text":"","code":"sendEmail(conf, to, subject, text, attFile = NULL)"},{"path":"/dev/reference/sendEmail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send email from Rapporteket — sendEmail","text":"conf List containing (Rapporteket) config sender email address, SMTP server url port number Character vector containing email addresses. May also contain full names like 'Jane Doe <janed@nowhere.com>' subject Character string providing email subject. text Character string providing plain email text attFile Character string providing full file path attachment. Default NULL case attachment made","code":""},{"path":"/dev/reference/sendEmail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send email from Rapporteket — sendEmail","text":"Invisible sending email","code":""},{"path":"/dev/reference/stagingData.html","id":null,"dir":"Reference","previous_headings":"","what":"Staging data functions — stagingData","title":"Staging data functions — stagingData","text":"Low level functions handling registry staging data Rapporteket. , functions provide staging data management per se. Proper management, e.g. staging data updates fallback logic must therefore established within registry take staging data use.","code":""},{"path":"/dev/reference/stagingData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Staging data functions — stagingData","text":"","code":"listStagingData(registryName, dir = Sys.getenv(\"R_RAP_CONFIG_PATH\"))  mtimeStagingData(registryName, dir = Sys.getenv(\"R_RAP_CONFIG_PATH\"))  saveStagingData(   registryName,   dataName,   data,   dir = Sys.getenv(\"R_RAP_CONFIG_PATH\") )  loadStagingData(registryName, dataName, dir = Sys.getenv(\"R_RAP_CONFIG_PATH\"))  deleteStagingData(   registryName,   dataName,   dir = Sys.getenv(\"R_RAP_CONFIG_PATH\") )  cleanStagingData(eolAge, dryRun = TRUE)"},{"path":"/dev/reference/stagingData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Staging data functions — stagingData","text":"registryName Character string providing registry name. dir Character string providing path staging data directory resides case storage files. Default value Sys.getenv(\"R_RAP_CONFIG_PATH\"). dataName Character string providing data set name. data data object data.frame stored dataName. eolAge Numeric providing staging data end--life age seconds. Based current time time storage staging files older eolAge identified subject removal. dryRun Logical defining function run dry (none destructive) mode.","code":""},{"path":"/dev/reference/stagingData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Staging data functions — stagingData","text":"listStagingData() returns character vector staging data     sets given registry (registryName). mtimeStagingData() returns staging data set named POSIXct     vector modification times given registry     (registryName). saveStagingData() successful returns data object     (data), invisibly. saving fails warning issued     function returns FALSE. loadStagingData() returns data object corresponding     name given upon saving (dataName). requested data set     loading exist function returns FALSE. deleteStagingData() returns TRUE data set deleted     FALSE . cleanStagingData() returns list data sets ()     removed. rapbase:::pathStagingData() internal helper function     returns character string path staging directory     registryName. parent directory (dir) exists     error returned.","code":""},{"path":"/dev/reference/stagingData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Staging data functions — stagingData","text":"Staging data can stored files binary large objects database method choice defined rapbase configuration. Regardless storage method per registry symmetric encryption storage content enforced. Keys used encryption generated existing database credentials. Therefore, please note removing changing credentials render historic staging data inaccessible. cleanStagingData() globally removes staging data store date prior end--life age provided. vastly destructive function used great care.","code":""},{"path":"/dev/reference/stagingData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Staging data functions — stagingData","text":"","code":"## Prep test data registryName <- \"rapbase\" dataName <- \"testData\" data <- mtcars dir <- tempdir()  ## Save data for staging saveStagingData(registryName, dataName, data, dir)  ## List data currently in staging listStagingData(registryName, dir) #> [1] \"testData\"  ## Retrieve data set from staging and compare to outset stagedData <- loadStagingData(registryName, dataName, dir) identical(data, stagedData) #> [1] TRUE  ## Get modification time for staging file(s) mtimeStagingData(registryName, dir) #>                  testData  #> \"2025-02-25 15:30:29 UTC\""},{"path":"/dev/reference/stagingDataHelper.html","id":null,"dir":"Reference","previous_headings":"","what":"Data staging helper (internal) functions — stagingDataHelper","title":"Data staging helper (internal) functions — stagingDataHelper","text":"set helper functions aid staging registry data Rapporteket.","code":""},{"path":"/dev/reference/stagingDataHelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data staging helper (internal) functions — stagingDataHelper","text":"","code":"pathStagingData(registryName, dir)  wrapStagingData(data, key)  unwrapStagingData(data, key)  dbStagingData(key, drop = FALSE)  dbStagingPrereq(key)  dbStagingConnection(key = NULL, con = NULL, init = FALSE)  dbStagingProcess(key, query, params = list(), statement = FALSE)"},{"path":"/dev/reference/stagingDataHelper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data staging helper (internal) functions — stagingDataHelper","text":"registryName Character string providing registry name. dir Character string providing path staging data directory resides case storage files. Default value Sys.getenv(\"R_RAP_CONFIG_PATH\"). data data object added collected staging. key Character string key used staging data store credentials. drop Logical defining database deleted. FALSE default. con database connection object. init Logical defining function call perform initial set-database. Default value FALSE query Character string providing database query. params List values provided parameterized query. statement Logical defining query statement . Default value FALSE.","code":""},{"path":"/dev/reference/stagingDataHelper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data staging helper (internal) functions — stagingDataHelper","text":"pathStagingData() returns character string path     staging directory registryName. parent directory     (dir) exists error returned. dbStagingData() creates drops staging data database     returns message invisibly. dbStagingPrereq() ensures database staging data     properly setup returns message, invisibly. dbStagingConnection() returns open database connection     object , open connection object provided argument,     closes returns NULL invisibly. dbStagingProcess() returns raw result database query     based arguments provided.","code":""},{"path":"/dev/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules and helper functions for registry usage reports — stats","title":"Shiny modules and helper functions for registry usage reports — stats","text":"modules may used registries easy setup usage reports. intended purpose provide registry staff access resources Rapporteket used, .e. application start-single report usage. , tool provide useful statistics. However, might also serve formal monitor utility logging carefully implemented throughout relevant functions make registry application Rapporteket.","code":""},{"path":"/dev/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules and helper functions for registry usage reports — stats","text":"","code":"statsInput(id)  statsUI(id)  statsServer(id, registryName, app_id = NULL, eligible = TRUE)  statsApp()  logFormat(log)  logTimeFrame(log, startDate, endDate)"},{"path":"/dev/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules and helper functions for registry usage reports — stats","text":"id Character string shiny module id registryName Character string registry name key app_id identifier particular registry. Default value NULL, case action taken. value provided, log filtered show entries matching chosen app_id. eligible Logical defining module allowed work full capacity. might useful access module products restricted. Default TRUE, .e. restrictions. log Data frame containing log data (Rapporteket format) startDate Date object defining start interval (character representation \"YYYY-MM-DD\") endDate Date object defining end interval (character representation \"YYYY-MM-DD\")","code":""},{"path":"/dev/reference/stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules and helper functions for registry usage reports — stats","text":"Shiny objects, mostly. Helper functions may return stuff .","code":""},{"path":"/dev/reference/stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules and helper functions for registry usage reports — stats","text":"","code":"# client user interface function ui <- shiny::fluidPage(   shiny::sidebarLayout(     shiny::sidebarPanel(statsInput(\"test\")),     shiny::mainPanel(statsUI(\"test\"))   ) )  # server function server <- function(input, output, session) {   statsServer(\"test\", registryName = \"rapbase\", eligible = TRUE) }  # run the shiny app in an interactive environment if (interactive()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/statsGuide.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny modules providing the Stats Guide — statsGuide","title":"Shiny modules providing the Stats Guide — statsGuide","text":"Shiny modules providing Stats Guide","code":""},{"path":"/dev/reference/statsGuide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny modules providing the Stats Guide — statsGuide","text":"","code":"statsGuideUI(id)  statsGuideServer(id, registryName)  statsGuideApp()"},{"path":"/dev/reference/statsGuide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny modules providing the Stats Guide — statsGuide","text":"id Character string module ID registryName Character string registry name key","code":""},{"path":"/dev/reference/statsGuide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny modules providing the Stats Guide — statsGuide","text":"Functions ui server representing (module) app","code":""},{"path":"/dev/reference/statsGuide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny modules providing the Stats Guide — statsGuide","text":"","code":"ui <- shiny::fluidPage(   statsGuideUI(\"statsGuide\") )  server <- function(input, output, session) {   statsGuideServer(\"statsGuide\", \"test\") }  if (interactive()) {   shiny::shinyApp(ui, server) }"},{"path":"/dev/reference/unitAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unit attributes from an access tree file — unitAttribute","title":"Get unit attributes from an access tree file — unitAttribute","text":"Obtain organization unit attributes access tree JSON file","code":""},{"path":"/dev/reference/unitAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unit attributes from an access tree file — unitAttribute","text":"","code":"unitAttribute(unit, what, file = NULL, path = Sys.getenv(\"R_RAP_CONFIG_PATH\"))"},{"path":"/dev/reference/unitAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unit attributes from an access tree file — unitAttribute","text":"unit Integer providing look-unit id Character string defining return given unit id file Character string file name JSON file. Default values NULL case corresponding value rapbaseConfig.yml used. path Character string file path JSON file. Default value Sys.getenv(\"R_RAP_CONFIG_PATH\").","code":""},{"path":"/dev/reference/unitAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unit attributes from an access tree file — unitAttribute","text":"corresponding value ''.","code":""},{"path":"/dev/reference/upgradeAutoReportData.html","id":null,"dir":"Reference","previous_headings":"","what":"Upgrade auto reports — upgradeAutoReportData","title":"Upgrade auto reports — upgradeAutoReportData","text":"Upgrade auto report config new features emerge. Currently, type definition added set 'subscription' historically type used","code":""},{"path":"/dev/reference/upgradeAutoReportData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upgrade auto reports — upgradeAutoReportData","text":"","code":"upgradeAutoReportData(config)"},{"path":"/dev/reference/upgradeAutoReportData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upgrade auto reports — upgradeAutoReportData","text":"config List auto report configuration","code":""},{"path":"/dev/reference/upgradeAutoReportData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upgrade auto reports — upgradeAutoReportData","text":"List (upgraded) auto report configuration","code":""},{"path":"/dev/reference/userAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"User attributes in container apps running behind shinyproxy — userAttribute","title":"User attributes in container apps running behind shinyproxy — userAttribute","text":"apps running containers particular environment variables must defined orderly handling dynamic user privileges. function makes use environmental variables defined shinyproxy provide available privileges shiny application. helper function userInfo. used without shiny session object calls functions made without arguments. redefining contexts needed, please use userInfo instead.","code":""},{"path":"/dev/reference/userAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"User attributes in container apps running behind shinyproxy — userAttribute","text":"","code":"userAttribute(unit = NULL, map_orgname = NULL)  getUserEmail(shinySession = NULL, group = NULL)  getUserFullName(shinySession = NULL, group = NULL)  getUserGroups(shinySession = NULL, group = NULL)  getUserName(shinySession = NULL, group = NULL)  getUserPhone(shinySession = NULL, group = NULL)  getUserReshId(shinySession = NULL, group = NULL)  getUserRole(shinySession = NULL, group = NULL)"},{"path":"/dev/reference/userAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"User attributes in container apps running behind shinyproxy — userAttribute","text":"unit Integer providing look-unit id. Default value NULL case privileges group returned. map_orgname data.frame containing two columns: UnitId unit ids orgname corresponding organization names shinySession shiny session object. Default value NULL group Character string providing name app R package name. term \"group\" used relate environmental variable SHINYPROXY_USERGROUPS corresponds apps given user can access. Default value NULL always set shiny app run shinyproxy container.","code":""},{"path":"/dev/reference/userAttribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"User attributes in container apps running behind shinyproxy — userAttribute","text":"Invisibly list user metadata privileges: name username privileges apply. fullName User full name phone User phone number email User email unit Unit id privileges defined. org Organization id user. role Role user. orgName Name organization defined unit id. String user attribute","code":""},{"path":"/dev/reference/userAttribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"User attributes in container apps running behind shinyproxy — userAttribute","text":"","code":"# \\donttest{ # Requires a valid shiny session object try(getUserEmail()) #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> [1] \"rapporteket@skde.no\" try(getUserEmail(shinySessionObject)) #> System has no defined instance. Configuration as provided by #>             'rapbaseConfig.yml' will be used as source for user data. #> [1] \"rapporteket@skde.no\" # }"},{"path":"/dev/reference/userInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide user attributes based on environment context — userInfo","title":"Provide user attributes based on environment context — userInfo","text":"Extracts elements either config, url (shiny), shiny session environmental variables relevant user data name, group, role org id (e.g. resh id). Source info based environment context can controlled altering default settings contexts apply various sources user data. function normally used via helper functions (see ).","code":""},{"path":"/dev/reference/userInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide user attributes based on environment context — userInfo","text":"","code":"userInfo(   entity,   shinySession = NULL,   devContexts = c(\"DEV\"),   testContexts = c(\"TEST\"),   prodContexts = c(\"QA\", \"QAC\", \"PRODUCTION\", \"PRODUCTIONC\"),   group = NULL )"},{"path":"/dev/reference/userInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide user attributes based on environment context — userInfo","text":"entity String defining element return. Currently, one 'user', groups', 'resh_id', 'role', 'email', 'full_name' 'phone'. shinySession Shiny session object (list, NULL default). Must provided source user attributes either shiny app url external authentication provider. default apply 'TEST', 'QA' 'PRODUCTION' contexts case shiny session object must provided. devContexts character vector providing unique instances regarded development context. context user attributes read configuration provided 'rapbaseConfig.yml'. instances provided overlap instances provided contexts. default set c(\"DEV\"). testContexts character vector providing unique instances regarded test context. context user attributes read url call shiny application. Hence, context corresponding shiny session object must also provided. instances provided overlap instances provided contexts. default set c(\"TEST\"). prodContexts character vector providing unique instances regarded production context. context user attributes read shiny session object (deployment shiny-server) , environmental variables (standalone container deployment). Hence, context corresponding shiny session object must also provided. Instances provided overlap instances contexts. default set c(\"QA\", \"QAC\", \"PRODUCTION\", \"PRODUCTIONC\"). Duplication seen \"C\" suffix needed long apps question run shiny-server standalone containers. group Character string providing name app R package name. term \"group\" used relate environmental variable SHINYPROXY_USERGROUPS corresponds apps given user can access.","code":""},{"path":"/dev/reference/userInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide user attributes based on environment context — userInfo","text":"String single user data element","code":""},{"path":[]},{"path":"/dev/reference/writeAutoReportData.html","id":null,"dir":"Reference","previous_headings":"","what":"Write automated report metadata — writeAutoReportData","title":"Write automated report metadata — writeAutoReportData","text":"Write automated report metadata","code":""},{"path":"/dev/reference/writeAutoReportData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write automated report metadata — writeAutoReportData","text":"","code":"writeAutoReportData(   fileName = \"autoReport.yml\",   config,   packageName = \"rapbase\",   target = getConfig(\"rapbaseConfig.yml\")$r$autoReport$target )"},{"path":"/dev/reference/writeAutoReportData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write automated report metadata — writeAutoReportData","text":"fileName String defining name yaml configuration file. Default 'autoReport.yml' config list yaml configuration packageName String defining package configuration file resides. configuration file within R-package used case environmental variable 'R_RAP_CONFIG_PATH' defined (empty) target List autoreports file database","code":""},{"path":"/dev/reference/writeAutoReportData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write automated report metadata — writeAutoReportData","text":"","code":"# \\donttest{ # Example depend on environment variable R_RAP_CONFIG_PATH being set config <- readAutoReportData() #> Auto report data were upgraded: auto reports with no type defined now set to 'subscription'. try(writeAutoReportData(config = config)) #> Error in writeAutoReportData(config = config) :  #>   There is nowhere to store config data. The environment variable R_RAP_CONFIG_PATH must be defined providing av path to a directory where configuration can be written. Stopping # }"},{"path":[]},{"path":"/dev/news/index.html","id":"main-change-1-24-3","dir":"Changelog","previous_headings":"","what":"Main change","title":"rapbase 1.24.3","text":"Support special characters database password @kevinthon https://github.com/Rapporteket/rapbase/pull/154","code":""},{"path":"/dev/news/index.html","id":"other-changes-1-24-3","dir":"Changelog","previous_headings":"","what":"Other changes","title":"rapbase 1.24.3","text":"Configure Renovate @renovate https://github.com/Rapporteket/rapbase/pull/145 Deactivate renderRmd test github @arnfinn https://github.com/Rapporteket/rapbase/pull/155 Github actions cleanup @arnfinn https://github.com/Rapporteket/rapbase/pull/161 docker-compose: use dev:weekly @arnfinn https://github.com/Rapporteket/rapbase/pull/152 dev-container: disable authorization @arnfinn https://github.com/Rapporteket/rapbase/pull/146 Bump actions/checkout 3 4 @dependabot https://github.com/Rapporteket/rapbase/pull/144 Update JamesIves/github-pages-deploy-action action v4.6.1 @renovate https://github.com/Rapporteket/rapbase/pull/163 Deactivate testing R 3.6. longer working Tidyverse packages.","code":""},{"path":"/dev/news/index.html","id":"rapbase-1242","dir":"Changelog","previous_headings":"","what":"rapbase 1.24.2","title":"rapbase 1.24.2","text":"CRAN release: 2023-06-19 Fixed failing test(s) mac-os (#142)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1241","dir":"Changelog","previous_headings":"","what":"rapbase 1.24.1","title":"rapbase 1.24.1","text":"Fixed bug export module (#141). downloaded data file empty since --column-statistics=0 unknown variable mysqldump.","code":""},{"path":"/dev/news/index.html","id":"rapbase-1240","dir":"Changelog","previous_headings":"","what":"rapbase 1.24.0","title":"rapbase 1.24.0","text":"CRAN release: 2023-02-27 summary, registries Rapporteket may now run standalone container apps. Thus, shiny-server longer requirement app deployment. summary done. Extended handling user attributes behind app proxy (spring boot/shinyproxy) Added database backend staging data Per app (registry) encryption staging data (regardless file database backend) Added vignette short description staging data server side set-","code":""},{"path":"/dev/news/index.html","id":"breaking-changes-1-24-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"rapbase 1.24.0","text":"introducing encryption, staging data work across previous versions. existing staging data therefore removed upgrading version rapbase (downgrading previous version). remove staging data delete related files directories. staging data uses database backend, database dropped. need actions files database recreated upon next request storing staging data.","code":""},{"path":"/dev/news/index.html","id":"rapbase-1231","dir":"Changelog","previous_headings":"","what":"rapbase 1.23.1","title":"rapbase 1.23.1","text":"Fixed Fixed bug log sanitizer function (#130)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1230","dir":"Changelog","previous_headings":"","what":"rapbase 1.23.0","title":"rapbase 1.23.0","text":"CRAN release: 2022-08-17 Reduced number imports replacing local function functions sship (#127) Added latex package microtype report template better printing less hyphenation pdf reports (#123) Added database optional log backend function (scheduled) clean logs (#112) logging database backend format set json (#120) Reorganized consolidated R files, removed deprecated unused function applied minor fixes function flaws (#121)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1220","dir":"Changelog","previous_headings":"","what":"rapbase 1.22.0","title":"rapbase 1.22.0","text":"Improved first page graphics hyperlinking default latex template (#104) Moved soft hard deprecation outdated functions now fail (#105) Added functions handle staging data used registry apps (#106) Improved guide export data (#108) Reduced number R package imports, also removing seldom never used functionality (#109)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1210","dir":"Changelog","previous_headings":"","what":"rapbase 1.21.0","title":"rapbase 1.21.0","text":"Pre-set frequency auto reports may now set upon calling auto report module server function Fixed bug default first issue date frequency set year Fixed visual flaw export GUI: download button now show keys found","code":""},{"path":"/dev/news/index.html","id":"rapbase-1202","dir":"Changelog","previous_headings":"","what":"rapbase 1.20.2","title":"rapbase 1.20.2","text":"Fix short-term error function finding next run date auto reports result new field “startDate” added auto report data functions upgrading existing data missing field (#99) start date checked reports run (#100) R package sship now installed Cran rather GitHub (#101)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1201","dir":"Changelog","previous_headings":"","what":"rapbase 1.20.1","title":"rapbase 1.20.1","text":"Fix unit testing issue also allowing “MockShinySession” attribute shiny session object","code":""},{"path":"/dev/news/index.html","id":"rapbase-1200","dir":"Changelog","previous_headings":"","what":"rapbase 1.20.0","title":"rapbase 1.20.0","text":"Navbar user information widget provided shiny module","code":""},{"path":"/dev/news/index.html","id":"rapbase-1194","dir":"Changelog","previous_headings":"","what":"rapbase 1.19.4","title":"rapbase 1.19.4","text":"Export available team members ","code":""},{"path":"/dev/news/index.html","id":"rapbase-1193","dir":"Changelog","previous_headings":"","what":"rapbase 1.19.3","title":"rapbase 1.19.3","text":"Added T1 font encoding default LaTeX template proper printing symbols (e.g. > <) pdfs (#94) Replaced function none ascii unicode characters","code":""},{"path":"/dev/news/index.html","id":"rapbase-1192","dir":"Changelog","previous_headings":"","what":"rapbase 1.19.2","title":"rapbase 1.19.2","text":"Fixed sub optimal formatting auto report yaml file, converting old- writing new data (#93)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1191","dir":"Changelog","previous_headings":"","what":"rapbase 1.19.1","title":"rapbase 1.19.1","text":"Fixed missing international language producing pdf Rapporteket Added option latex templates rendering markdown Added latex template plain documents","code":""},{"path":"/dev/news/index.html","id":"rapbase-1190","dir":"Changelog","previous_headings":"","what":"rapbase 1.19.0","title":"rapbase 1.19.0","text":"Added option explicit registry repository name github collecting keys export (#91)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1180","dir":"Changelog","previous_headings":"","what":"rapbase 1.18.0","title":"rapbase 1.18.0","text":"Added guide use statistics report (#90)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1171","dir":"Changelog","previous_headings":"","what":"rapbase 1.17.1","title":"rapbase 1.17.1","text":"Fixed bug related ambiguous class arguments rendering reports (#86). Fixed bug filtering stats per registry (#87). Adjusted export implicit encryption including fixing inadequate reactivity download handler (#89) applying older R compatibility fix sship.","code":""},{"path":"/dev/news/index.html","id":"rapbase-1170","dir":"Changelog","previous_headings":"","what":"rapbase 1.17.0","title":"rapbase 1.17.0","text":"Remove one (many) imports (#80). Fixed improved organization logging applied understood auto reports (#84). Added option setting eligibility upon calling modules (autoReport, export stats) (#85). General guide auto reports updated making general correcting minor errors. Fixed shortcoming dealing organization dispatchment bulletins.","code":""},{"path":"/dev/news/index.html","id":"rapbase-1161","dir":"Changelog","previous_headings":"","what":"rapbase 1.16.1","title":"rapbase 1.16.1","text":"Added missing reactive return auto report server module (#79)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1160","dir":"Changelog","previous_headings":"","what":"rapbase 1.16.0","title":"rapbase 1.16.0","text":"New functions shiny modules providing automated reports (subscriptions, dispatchments bulletins) registries (#78)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1151","dir":"Changelog","previous_headings":"","what":"rapbase 1.15.1","title":"rapbase 1.15.1","text":"Allow GitHub API calls proxy (#76) Fixed failing error check TEST PROD contexts (#77)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1150","dir":"Changelog","previous_headings":"","what":"rapbase 1.15.0","title":"rapbase 1.15.0","text":"New functions modules handling database exports (#74) Shiny modules report use statistics can applied registries (#75) Minor adjustment presence ids auto report tables optional upon table creation","code":""},{"path":"/dev/news/index.html","id":"rapbase-1141","dir":"Changelog","previous_headings":"","what":"rapbase 1.14.1","title":"rapbase 1.14.1","text":"New functions added site doc","code":""},{"path":"/dev/news/index.html","id":"rapbase-1140-70","dir":"Changelog","previous_headings":"","what":"rapbase 1.14.0 (#70)","title":"rapbase 1.14.0 (#70)","text":"Added latex template rendering RMarkdown pandoc addition, graphics bookdown stuff also added part new template directory Added generic function rendering RMarkdown standalone fragment use Added generic function making sensible tables html pdf output formats Fixed error general app info info (#60)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1133-68","dir":"Changelog","previous_headings":"","what":"rapbase 1.13.3 (#68)","title":"rapbase 1.13.3 (#68)","text":"Minor adjustment email subject (header field) format","code":""},{"path":"/dev/news/index.html","id":"rapbase-1132-66","dir":"Changelog","previous_headings":"","what":"rapbase 1.13.2 (#66)","title":"rapbase 1.13.2 (#66)","text":"Fixed email encoded subject (header field) split Properly parsing full names session object containing unicode characters","code":""},{"path":"/dev/news/index.html","id":"rapbase-1131","dir":"Changelog","previous_headings":"","what":"rapbase 1.13.1","title":"rapbase 1.13.1","text":"Included unit tests coverage reporting depending test database github actions (ci)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1130","dir":"Changelog","previous_headings":"","what":"rapbase 1.13.0","title":"rapbase 1.13.0","text":"New function providing registry db metadata","code":""},{"path":"/dev/news/index.html","id":"rapbase-1122","dir":"Changelog","previous_headings":"","what":"rapbase 1.12.2","title":"rapbase 1.12.2","text":"Auto report id added table aid needs registry implementation","code":""},{"path":"/dev/news/index.html","id":"rapbase-1121","dir":"Changelog","previous_headings":"","what":"rapbase 1.12.1","title":"rapbase 1.12.1","text":"Update contributor guidelines Re-establish build site part ci","code":""},{"path":"/dev/news/index.html","id":"rapbase-1120","dir":"Changelog","previous_headings":"","what":"rapbase 1.12.0","title":"rapbase 1.12.0","text":"Relevant version info added user pop-#46 Looks user pop-info changed #49 Logging functions previously found raplog now delivered package Built-logging automated reports #56 New generic function auto report GUI option name-id mapping #54 Added new types automated reports (dispatchment bulletin) #47, #48 Deprecated functions future clean-#55 Migrated ci travis gh actions","code":""},{"path":"/dev/news/index.html","id":"rapbase-1114","dir":"Changelog","previous_headings":"","what":"rapbase 1.11.4","title":"rapbase 1.11.4","text":"clean-code also deprecating function v1.12","code":""},{"path":"/dev/news/index.html","id":"rapbase-1113","dir":"Changelog","previous_headings":"","what":"rapbase 1.11.3","title":"rapbase 1.11.3","text":"Remove rJava dependency","code":""},{"path":"/dev/news/index.html","id":"rapbase-1112","dir":"Changelog","previous_headings":"","what":"rapbase 1.11.2","title":"rapbase 1.11.2","text":"Remove close option user widget","code":""},{"path":"/dev/news/index.html","id":"rapbase-1111","dir":"Changelog","previous_headings":"","what":"rapbase 1.11.1","title":"rapbase 1.11.1","text":"Fix none-ascii characters email subject (header)","code":""},{"path":"/dev/news/index.html","id":"rapbase-1110","dir":"Changelog","previous_headings":"","what":"rapbase 1.11.0","title":"rapbase 1.11.0","text":"options config new functions, e.g. fireInTheHole() howWeDealWithPersonalData() Extending report subscription options improvements handling errors Improved readability site","code":""},{"path":"/dev/news/index.html","id":"rapbase-1100","dir":"Changelog","previous_headings":"","what":"rapbase 1.10.0","title":"rapbase 1.10.0","text":"CRAN release: 2019-08-07 Removed lot stuff belong package Support MySQL RMariaDB, Now GPL-3 license","code":""},{"path":"/dev/news/index.html","id":"rapbase-190","dir":"Changelog","previous_headings":"","what":"rapbase 1.9.0","title":"rapbase 1.9.0","text":"Added NEWS.md file track changes package. Changed license MIT Updated README including Rapporteket logo lifecycle badge Added Code Conduct Added contribution guidelines New package site https://rapporteket.github.io/rapbase/index.html Auto build site Travis CI","code":""}]

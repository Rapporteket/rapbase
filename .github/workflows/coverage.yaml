on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
      GITHUB_ACTIONS_RUN_DB_UNIT_TESTS: true
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-tinytex@v2

      - name: Db unit tests in ubuntu/linux only
        if: runner.os != 'Windows'
        run: |
          if [[ ${{ runner.os }} == Linux ]]; then
            echo "GITHUB_ACTIONS_RUN_DB_UNIT_TESTS=true" >> $GITHUB_ENV
            echo "DB_HOST=localhost" >> $GITHUB_ENV
            echo "DB_USER=root" >> $GITHUB_ENV
            echo "DB_PASS=root" >> $GITHUB_ENV
          else
            echo "GITHUB_ACTIONS_RUN_DB_UNIT_TESTS=false" >> $GITHUB_ENV
          fi

      - name: Set up MySQL, ubuntu only
        if: runner.os == 'Linux'
        run: |
          sudo /etc/init.d/mysql start

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
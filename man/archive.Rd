% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archiveLog.R
\name{archive}
\alias{archive}
\alias{createArchive}
\alias{logsOverSize}
\alias{archiveLog}
\alias{cleanArchive}
\title{Archive functions for logs at Rapporteket}
\usage{
createArchive(archivePath)

logsOverSize(logPath, overSize = 1024 * 1000, pattern = ".csv$")

archiveLog(archivePath, logPath, logs = c("appLog.csv", "reportLog.csv"))

cleanArchive(archivePath, eolDays = -1, pattern = ".rda$")
}
\arguments{
\item{archivePath}{String providing the path to the archive directory}

\item{logPath}{String providing the path to the log directory}

\item{overSize}{Integer size in bytes from where larger files will be listed
as candidates for archiving. Default value set to 1 Mb (1024 * 1000)}

\item{pattern}{String regexp defining file name pattern}

\item{logs}{String vector defining the log file names. Defaults to
\code{c("appLog.csv", "reportLog.csv")}}

\item{eolDays}{Integer age in days definig archive file end-of-life. When
\code{eoldays < 0} no archive files will be deleted. Default value is -1}
}
\description{
Functions to manage archiving of logs at Rapporteket. To be applied mainly
as helpers within the raplog package.
}
\details{
\code{crateArchive} simply creates a directory for the archived files to
live in.

\code{logsOverSize} provides a character vector of relevant files
for archiving based on the given size limit and file name pattern.

\code{archiveLog} do the actual archiving and deletes the source log files
after the archive files where sucessfully created. Returns prematurely NULL
if no log file(s) provided

\code{cleanArchive} deletes files from the archive as their days are
numbered.
}
\examples{
# Create an archive
createArchive(archivePath = tempfile())
# List all files (with alphanumeric names) larger than 1 Kb in tempdir()
logsOverSize(
  logPath = tempdir(), overSize = 1024,
  pattern = "^[1-9a-zA-Z]"
)
# Archive a file under the same directory
fileName <- paste0(tempfile(), ".csv")
file.create(fileName)
write.csv(mtcars, fileName)
archiveLog(
  archivePath = dirname(fileName), logPath = dirname(fileName),
  logs = c(basename(fileName))
)
# Do not delete any files
cleanArchive(archivePath = tempdir())
}
